[
  {
    "line": 1,
    "elements": [
      {
        "line": 5,
        "name": "SC01. Check the search request retrieve the correct number of issues from the database.",
        "description": "",
        "id": "we-want-to-test-the-all-issues-searching-service-for-the-project;sc01.-check-the-search-request-retrieve-the-correct-number-of-issues-from-the-database.",
        "after": [
          {
            "result": {
              "duration": 10924718,
              "status": "passed"
            },
            "match": {
              "location": "IssueSearchSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 563814975,
              "status": "passed"
            },
            "line": 6,
            "name": "the next issues already created in the system for the owner \u0027test\u0027",
            "match": {
              "arguments": [
                {
                  "val": "test",
                  "offset": 61
                }
              ],
              "location": "IssueSearchSteps.createNewIssues(String,Issue\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "state",
                  "title",
                  "url"
                ],
                "line": 7
              },
              {
                "cells": [
                  "open",
                  "Issue 1",
                  "www.test.com"
                ],
                "line": 8
              },
              {
                "cells": [
                  "closed",
                  "Issue 2",
                  "www.google.com"
                ],
                "line": 9
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 84848820,
              "status": "passed"
            },
            "line": 10,
            "name": "the user requests all the issues in the system",
            "match": {
              "location": "IssueSearchSteps.searchIssues()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 364308,
              "status": "passed"
            },
            "line": 11,
            "name": "it should be returned this list of issues with \u00272\u0027 elements",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 48
                }
              ],
              "location": "IssueSearchSteps.countFoundIssues(long)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 13,
        "name": "SC02. Check the search request retrieve all the issues with unique id from the database.",
        "description": "",
        "id": "we-want-to-test-the-all-issues-searching-service-for-the-project;sc02.-check-the-search-request-retrieve-all-the-issues-with-unique-id-from-the-database.",
        "after": [
          {
            "result": {
              "duration": 2354871,
              "status": "passed"
            },
            "match": {
              "location": "IssueSearchSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5312411,
              "status": "passed"
            },
            "line": 14,
            "name": "the next issues already created in the system for the owner \u0027test\u0027",
            "match": {
              "arguments": [
                {
                  "val": "test",
                  "offset": 61
                }
              ],
              "location": "IssueSearchSteps.createNewIssues(String,Issue\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "state",
                  "title",
                  "url"
                ],
                "line": 15
              },
              {
                "cells": [
                  "open",
                  "Issue 1",
                  "www.test.com"
                ],
                "line": 16
              },
              {
                "cells": [
                  "closed",
                  "Issue 2",
                  "www.google.com"
                ],
                "line": 17
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2560000,
              "status": "passed"
            },
            "line": 18,
            "name": "the user requests all the issues in the system",
            "match": {
              "location": "IssueSearchSteps.searchIssues()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 17675898,
              "status": "passed"
            },
            "line": 19,
            "name": "it should be returned this list of issues with not empty id",
            "match": {
              "location": "IssueSearchSteps.checkIdFoundIssues()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 21,
        "name": "SC03. Check the search request retrieve all issues from the database.",
        "description": "",
        "id": "we-want-to-test-the-all-issues-searching-service-for-the-project;sc03.-check-the-search-request-retrieve-all-issues-from-the-database.",
        "after": [
          {
            "result": {
              "duration": 1799384,
              "status": "passed"
            },
            "match": {
              "location": "IssueSearchSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5464615,
              "status": "passed"
            },
            "line": 22,
            "name": "the next issues already created in the system for the owner \u0027test\u0027",
            "match": {
              "arguments": [
                {
                  "val": "test",
                  "offset": 61
                }
              ],
              "location": "IssueSearchSteps.createNewIssues(String,Issue\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "state",
                  "title",
                  "url"
                ],
                "line": 23
              },
              {
                "cells": [
                  "open",
                  "Issue 1",
                  "www.test.com"
                ],
                "line": 24
              },
              {
                "cells": [
                  "closed",
                  "Issue 2",
                  "www.google.com"
                ],
                "line": 25
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2674462,
              "status": "passed"
            },
            "line": 26,
            "name": "the user requests all the issues in the system",
            "match": {
              "location": "IssueSearchSteps.searchIssues()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 577641,
              "status": "passed"
            },
            "line": 27,
            "name": "it should be returned this list of issues with all the elemets unlocked",
            "match": {
              "location": "IssueSearchSteps.checkFoundIssues()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "We want to test the all issues searching service for the project",
    "description": "\r\n*MAIN SCENARIOS*",
    "id": "we-want-to-test-the-all-issues-searching-service-for-the-project",
    "keyword": "Feature",
    "uri": "issues/features/searchIssues.feature"
  }
]